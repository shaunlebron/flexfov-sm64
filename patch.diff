/src/game/area.c
  #include "level_table.h"
+ #include "flexfov.h"

@ void render_game
- geo_process_root(gCurrentArea->unk04, D_8032CE74, D_8032CE78, gFBSetColor);
+ flexfov_geo_process_root(gCurrentArea->unk04, D_8032CE74, D_8032CE78, gFBSetColor);

/src/game/camera.c
  #include "level_table.h"
+ #include "flexfov.h"

@ Gfx *geo_camera_fov
  perspective->fov = sFOVState.fov;
+ if (flexfov_is_on()) perspective->fov = 90.0f;

/src/game/game_init.h
- #define GFX_POOL_SIZE 6400
+ #define GFX_POOL_SIZE (6400*6)

/src/game/rendering_graph_node.c
  #include "sm64.h"
+ #include "flexfov.h"

@ static void geo_process_perspective
+ if (flexfov_is_on() && flexFovSky) return;

@ static void geo_process_camera
  mtxf_mul(gMatStack[gMatStackIndex + 1], cameraTransform, gMatStack[gMatStackIndex]);
+ if (flexfov_is_on()) flexfov_set_cam(gMatStack[gMatStackIndex + 1]);

@ static void geo_process_billboard
- gCurGraphNodeCamera->roll);
+ flexfov_is_on() ? flexFovRoll : gCurGraphNodeCamera->roll);

@ static void geo_process_background
+ if (flexfov_is_on() && !flexFovSky) return;

@ static int obj_is_in_view
+ if (flexfov_is_on()) return TRUE;
  geo = node->sharedChild;

@ static void geo_process_object
- node->header.gfx.pos, gCurGraphNodeCamera->roll);
+ node->header.gfx.pos, flexfov_is_on() ? flexFovRoll : gCurGraphNodeCamera->roll);

/src/pc/gfx/gfx_opengl.c
- #include <GL/glew.h>
+ #include <OpenGL/gl3.h>

/src/pc/gfx/gfx_pc.c
  #include <assert.h>
+ #include "src/game/flexfov.h"

- static void gfx_flush(void) {
+ void gfx_flush(void) {

+ void gfx_unload_current_shader(void) { gfx_rapi->unload_shader(rendering_state.shader_program); }
  static struct ShaderProgram *gfx_lookup_or_create_shader_program(uint32_t shader_id) {

@ static void gfx_sp_vertex
- calculate_normal_dir(&rsp.current_lights[i], rsp.current_lights_coeffs[i]);
+ calculate_normal_dir(flexfov_light_direction(&rsp.current_lights[i]), rsp.current_lights_coeffs[i]);

@ static void gfx_run_dl
  uint32_t opcode = cmd->words.w0 >> 24;
+ if (flexfov_is_on()) flexfov_run_prehook(cmd);

@ void gfx_init
  gfx_rapi->init();
+ flexfov_gfx_init();

/src/pc/gfx/gfx_sdl2.c
  #include "gfx_screen_config.h"
+ #include "src/game/flexfov.h"

@ static void gfx_sdl_handle_events
  window_height = event.window.data2;
+ flexfov_resize_cubemap();
